version: '3.7'

services:
  redis:
    image: 'redis:3-alpine'
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - ./redis/data:/data
    logging: &logging
      driver: journald
      options:
        tag: '{{.Name}}'

  db:
    image: 'postgres:9.6-alpine'
    healthcheck:
      test: pg_isready || exit 1
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    logging:
      <<: *logging

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: prolife/app
    healthcheck:
      test: wget -q 127.0.0.1:8000
    init: true
    restart: always
    env_file: ./.env
    volumes:
      - backend-static:/root/src/static
      - ./media:/root/src/media
    links:
      - redis:redis
    depends_on:
      - redis
      - db
    logging:
      <<: *logging

  celery-worker:
    image: prolife/app
    init: true
    env_file: ./.env
    environment:
      - DEBUG=off
    command: celery -A prolife worker -l INFO --concurrency=4
    links:
      - redis:redis
    depends_on:
      - redis
    logging:
      <<: *logging

  celery-beat:
    image: prolife/app
    init: true
    restart: always
    env_file: ./.env
    environment:
      - DEBUG=off
    command: celery -A prolife beat -l INFO --schedule /tmp/celerybeat-schedule -f /tmp/logs/celery-beat.log
    volumes:
      - ./logs:/tmp/logs
    links:
      - redis:redis
    depends_on:
      - redis
    logging:
      <<: *logging

  celery-flower:
    image: prolife/app
    healthcheck:
      test: wget -q 0.0.0.0:80
    init: true
    restart: always
    env_file: ./.env
    environment:
      - DEBUG=off
    command: celery flower --app=prolife --broker="${CELERY_BROKER_URL}" --basic_auth="${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}"
    depends_on:
      - celery-worker
    ports:
      - 5555:5555
    logging:
      <<: *logging

  nginx:
    image: 'nginx:stable-alpine'
    restart: always
    healthcheck:
      test: wget -q 0.0.0.0:80
    environment:
      - NGINX_HOST=${NGINX_HOST}
    volumes:
      - ./nginx/conf/default.template:/tmp/default.template
      - backend-static:/srv/static:ro
      - ./media:/srv/media:ro
      - ./letsencrypt/etc:/etc/letsencrypt
      - ./letsencrypt/data:/data/letsencrypt

    links:
      - app:app
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /tmp/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - 80:80
      - 443:443

    logging:
      <<: *logging

volumes:
  backend-static:
